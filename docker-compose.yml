version: '2'
services:

  nakadi:
    build: .
    ports:
     - "8080:8080"
    depends_on:
     - postgres
     - zookeeper
     - kafka
    environment:
      - SPRING_PROFILES_ACTIVE
      - NAKADI_OAUTH2_MODE=OFF
      - NAKADI_FEATURES_DEFAULT_FEATURES_CONNECTION_CLOSE_CRUTCH
      - NAKADI_FEATURES_DEFAULT_FEATURES_DISABLE_EVENT_TYPE_CREATION
      - NAKADI_FEATURES_DEFAULT_FEATURES_DISABLE_EVENT_TYPE_DELETION
      - NAKADI_FEATURES_DEFAULT_FEATURES_DISABLE_SUBSCRIPTION_CREATION
      - NAKADI_FEATURES_DEFAULT_FEATURES_HIGH_LEVEL_API
      - NAKADI_FEATURES_DEFAULT_FEATURES_CHECK_PARTITIONS_KEYS
      - NAKADI_FEATURES_DEFAULT_FEATURES_CHECK_OWNING_APPLICATION
      - NAKADI_FEATURES_DEFAULT_FEATURES_LIMIT_CONSUMERS_NUMBER
      - NAKADI_FEATURES_DEFAULT_FEATURES_SEND_BATCH_VIA_OUTPUT_STREAM
      - NAKADI_FEATURES_DEFAULT_FEATURES_REMOTE_TOKENINFO
      - NAKADI_FEATURES_DEFAULT_FEATURES_KPI_COLLECTION
      - NAKADI_FEATURES_DEFAULT_FEATURES_DISABLE_DB_WRITE_OPERATIONS
      - NAKADI_ZOOKEEPER_BROKERS=localhost:2181
      - SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/local_nakadi_db
      - SPRING_DATASOURCE_USERNAME=nakadi
      - SPRING_DATASOURCE_PASSWORD=nakadi
    network_mode: "host"

  postgres:
    image: postgres:9.5
    ports:
      - "5432:5432"
    volumes:
      - "./database/nakadi:/docker-entrypoint-initdb.d"
    environment:
      POSTGRES_USER: nakadi
      POSTGRES_PASSWORD: nakadi
      POSTGRES_DB: local_nakadi_db
    network_mode: "host"

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    network_mode: "host"
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:0.10.1.0
    network_mode: "host"
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: localhost:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_BROKER_ID: 0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock